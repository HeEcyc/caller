<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:bind="http://schemas.android.com/tools">

    <data>
        <import type="com.callerafter.lovelycall.R"/>
        <import type="android.view.View"/>
        <import type="android.telecom.Call"/>
        <variable
            name="viewModel"
            type="com.callerafter.lovelycall.ui.call.fragment.CallViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <GridLayout
            android:layout_width="0dp"
            android:layout_height="0dp"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintDimensionRatio="324:200"
            android:rowCount="2"
            android:columnCount="3">

            <include
                android:id="@+id/kMute"
                layout="@layout/view_call_keyboard_button"
                bind:labelText="@{@string/mute}"
                bind:iconRes="@{R.drawable.ic_keyboard_mic}"
                android:layout_rowWeight="1"
                android:layout_height="0dp"
                android:layout_width="0dp"
                android:layout_columnWeight="1"
                android:onClick="@{(_) -> viewModel.onMuteClick()}"
                bind:isActive="@{viewModel.isMuteOn}"/>

            <include
                android:id="@+id/kKeypad"
                layout="@layout/view_call_keyboard_button"
                android:layout_rowWeight="1"
                android:layout_height="0dp"
                android:layout_width="0dp"
                android:layout_columnWeight="1"
                bind:labelText="@{@string/keypad}"
                bind:iconRes="@{R.drawable.ic_keyboard_dial}"/>

            <include
                android:id="@+id/kSpeaker"
                layout="@layout/view_call_keyboard_button"
                android:layout_rowWeight="1"
                android:layout_height="0dp"
                android:layout_width="0dp"
                android:layout_columnWeight="1"
                bind:labelText="@{@string/speaker}"
                bind:iconRes="@{viewModel.callIcon}"
                android:onClick="@{(_) -> viewModel.onSpeakerClick()}"
                bind:isActive="@{viewModel.isSpeakerModeOn}"/>

            <include
                android:id="@+id/kHold"
                layout="@layout/view_call_keyboard_button"
                android:layout_rowWeight="1"
                android:layout_height="0dp"
                android:layout_width="0dp"
                android:layout_columnWeight="1"
                bind:labelText="@{@string/hold}"
                bind:iconRes="@{R.drawable.ic_keyboard_hold}"
                android:onClick="@{(_) -> viewModel.onHoldClick()}"
                bind:isActive="@{viewModel.callStateObservable == Call.STATE_HOLDING}"/>

            <include
                android:id="@+id/kAddCall"
                layout="@layout/view_call_keyboard_button"
                android:layout_rowWeight="1"
                android:layout_height="0dp"
                android:layout_width="0dp"
                android:layout_columnWeight="1"
                bind:labelText="@{@string/add_call}"
                bind:iconRes="@{R.drawable.ic_keyboard_add_call}"
                android:onClick="@{(_) -> viewModel.onAddClick()}"/>

            <include
                layout="@layout/view_call_keyboard_button"
                android:layout_rowWeight="1"
                android:layout_height="0dp"
                android:layout_width="0dp"
                android:layout_columnWeight="1"
                bind:labelText="@{@string/swap}"
                bind:iconRes="@{R.drawable.ic_keyboard_swap}"
                android:onClick="@{(_) -> viewModel.onSwapClick()}"
                android:visibility="@{viewModel.callRepository.hasMultipleCalls ? View.VISIBLE : View.GONE}"/>

        </GridLayout>

    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>